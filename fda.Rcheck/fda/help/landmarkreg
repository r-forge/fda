landmarkreg               package:fda               R Documentation

_L_a_n_d_m_a_r_k _R_e_g_i_s_t_r_a_t_i_o_n _o_f _F_u_n_c_t_i_o_n_a_l _O_b_s_e_r_v_a_t_i_o_n_s

_D_e_s_c_r_i_p_t_i_o_n:

     It is common to see that among a set of functions certain
     prominent features such peaks and valleys, called $landmarks$, do
     not occur at the same times, or other argument values.  This is
     called $phase variation$, and it can be essential to align these
     features before proceeding with further functional data analyses. 
     This function uses the timings of these features to align or
     register the curves.  The registration involves estimating a
     nonlinear transformation of the argument continuum for each
     functional observation.  This transformation is called a warping
     function. It must be strictly increasing and smooth.

_U_s_a_g_e:

     landmarkreg(fdobj, ximarks, x0marks=xmeanmarks,
                 WfdPar=fdPar(defbasis), monwrd=FALSE)

_A_r_g_u_m_e_n_t_s:

   fdobj: a functional data object containing the curves to be
          registered. 

 ximarks: a matrix containing the timings or argument values associated
          with the landmarks for the observations in 'fd' to be
          registered.  The number of rows N equals the number of
          observations, and the number of columns NL equals the number
          of landmarks. These landmark times must be in the interior of
          the interval over which the functions are defined. 

 x0marks: a vector of length NL of times of landmarks for target curve.
           If not supplied, the mean of the landmark times in 'ximarks'
          is used. 

  WfdPar: a functional parameter object defining the warping functions
          that transform time in order to register the curves. 

  monwrd: A logical value: if 'TRUE', the warping function is estimated
          using a monotone smoothing methhod; otherwise, a regular
          smoothing method is used, which is not guaranteed to give
          strictly monotonic warping functions. 

_D_e_t_a_i_l_s:

     It is essential that the location of every landmark be clearly
     defined in each of the curves as well as the template function. 
     If this is not the case, consider using the continuous
     registration function 'register.fd'. Although requiring that a
     monotone smoother be used to estimate the warping functions is
     safer, it adds considerably to the computatation time since
     monotone smoothing is itself an iterative process.  It is usually
     better to try an initial registration with this feature to see if
     there are any failures of monotonicity.  Moreover, monotonicity
     failures can usually be cured by increasing the smoothing
     parameter defining 'WfdPar.' Not much curvature is usually
     required in the warping functions, so a rather low power basis,
     usually B-splines, is suitable for defining the functional
     paramter argument 'WfdPar.' A registration with a few prominent
     landmarks is often a good preliminary to using the more
     sophisticated but more lengthy process in 'register.fd.'

_V_a_l_u_e:

     a names list of length 2 with components:

   fdreg: a functional data object for the registered curves. 

  warpfd: a functional data object for the warping functions. 

_S_e_e _A_l_s_o:

     'register.fd',  'smooth.morph'

_E_x_a_m_p_l_e_s:

     #See the analysis for the lip data in the examples.

