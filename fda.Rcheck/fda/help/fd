fd                    package:fda                    R Documentation

_D_e_f_i_n_e _a _F_u_n_c_t_i_o_n_a_l _D_a_t_a _O_b_j_e_c_t

_D_e_s_c_r_i_p_t_i_o_n:

     This is the constructor function for objects of the 'fd' class.
     Each function that sets up an object of this class must call this
     function.  This includes functions 'data2fd', 'smooth.basis',
     'density.fd', and so forth that estimate functional data objects
     that smooth or otherwise represent data. Ordinarily, users of the
     functional data analysis software will not need to call this
     function directly, but these notes are valuable to understanding
     the components of a 'list' of class 'fd'.

_U_s_a_g_e:

     fd(coef=NULL, basisobj=NULL, fdnames=defaultnames)

_A_r_g_u_m_e_n_t_s:

    coef: a vector, matrix, or three-dimensional array of coefficients.

          The first dimension (or elements of a vector) corresponds to
          basis functions.

          A second dimension corresponds to the number of functional
          observations, curves or replicates.  If 'coef' is a vector,
          it represents only a single functional observation.

          If 'coef' is an array, the third dimension corresponds to
          variables for multivariate functional data objects.

          A functional data object is "univariate" if 'coef' is a
          vector or matrix and "multivariate" if it is a
          three-dimensional array.

          if(is.null(coef)) coef <- rep(0, basisobj[['nbasis']]) 

basisobj: a functional basis object defining the basis

          if(is.null(basisobj)){ if(is.null(coef)) basisobj <-
          basisfd() else { rc <- range(coef) if(diff(rc)==0) rc <-
          rc+0:1 nb <- max(4, nrow(coef)) basisobj <-
          create.bspline.basis(rc, nbasis = nb) } } 

 fdnames: A list of length 3, each member being a string vector
          containing labels for the levels of the corresponding
          dimension of the discrete data.  The first dimension is for
          argument values, and is given the default name "time", the
          second is for replications, and is given the default name
          "reps", and the third is for functions, and is given the
          default name "values". 

_D_e_t_a_i_l_s:

     To check that an object is of this class, use function 'is.fd'.

     Normally only developers of new functional data analysis functions
     will actually need to use this function.

_V_a_l_u_e:

     A functional data object (i.e., having class 'fd'), which is a
     list with components named 'coefs', 'basis', and 'fdnames'.

_S_o_u_r_c_e:

     Ramsay, James O., and Silverman, Bernard W. (2006), _Functional
     Data Analysis, 2nd ed._, Springer, New York.

     Ramsay, James O., and Silverman, Bernard W. (2002), _Applied
     Functional Data Analysis_, Springer, New York

_S_e_e _A_l_s_o:

     'data2fd' 'smooth.basis' 'density.fd' 'create.bspline.basis'

_E_x_a_m_p_l_e_s:

     ##
     ## default
     ##
     fd()

     ##
     ## The simplest b-spline basis:  order 1, degree 0, zero interior knots:
     ##       a single step function
     ##
     bspl1.1 <- create.bspline.basis(norder=1, breaks=0:1)
     fd.bspl1.1 <- fd(0, basisobj=bspl1.1)

     fd.bspl1.1a <- fd(basisobj=bspl1.1)

     all.equal(fd.bspl1.1, fd.bspl1.1a)

     # TRUE

     ## Not run: 
     fd.bspl1.1b <- fd(0)
     Error in fd(0) :
       Number of coefficients does not match number of basis functions.

     ... because fd by default wants to create a cubic spline
     ## End(Not run)
     ##
     ## Cubic spline:  4  basis functions
     ##
     bspl4 <- create.bspline.basis(nbasis=4)
     plot(bspl4)
     parab4.5 <- fd(c(3, -1, -1, 3)/3, bspl4)
     # = 4*(x-.5)^2
     plot(parab4.5)

