lines.fd                 package:fda                 R Documentation

_A_d_d _L_i_n_e_s _f_r_o_m _F_u_n_c_t_i_o_n_a_l _D_a_t_a _t_o _a _P_l_o_t

_D_e_s_c_r_i_p_t_i_o_n:

     Lines defined by functional observations are added to an existing
     plot.

_U_s_a_g_e:

     ## S3 method for class 'fd':
     lines(x, Lfdobj=int2Lfd(0), nx=201, ...)
     ## S3 method for class 'fdSmooth':
     lines(x, Lfdobj=int2Lfd(0), nx=201, ...)

_A_r_g_u_m_e_n_t_s:

       x: a univariate functional data object to be evaluated at 'nx'
          points over 'xlim' and added as a line to an existing plot.   

  Lfdobj: either a nonnegative integer or a linear differential
          operator object.  If present, the derivative or the value of
          applying the operator is evaluated rather than the functions
          themselves. 

      nx: Number of points within 'xlim' at which to evaluate 'x' for
          plotting.   

    ... : additional arguments such as axis titles and so forth that
          can be used in plotting programs called by 'lines.fd' or
          'lines.fdSmooth'.   

_S_i_d_e _E_f_f_e_c_t_s:

     Lines added to an existing plot.

_S_e_e _A_l_s_o:

     'plot.fd',  'plotfit.fd'

_E_x_a_m_p_l_e_s:

     ##
     ## plot a fit with 3 levels of smoothing
     ##
     x <- seq(-1,1,0.02)
     y <- x + 3*exp(-6*x^2) + sin(1:101)/2
     # sin not rnorm to make it easier to compare
     # results across platforms 

     result4. <- smooth.basisPar(argvals=x, y=y, lambda=1)
     result4.4 <- smooth.basisPar(argvals=x, y=y, lambda=1e-4)
     result4.0 <- smooth.basisPar(x, y, lambda=0)

     plot(x, y)
     lines(result4.)
     lines(result4.4, col='green')
     lines.fdSmooth(result4.0, col='red') 

     plot(x, y, xlim=c(0.5, 1))
     lines.fdSmooth(result4.)
     lines.fdSmooth(result4.4, col='green')
     lines.fdSmooth(result4.0, col='red')  
     lines.fdSmooth(result4.0, col='red', nx=101)
     # no visible difference from the default?  

     lines.fdSmooth(result4.0, col='orange', nx=31)
     # Clear difference, especially between 0.95 and 1  

