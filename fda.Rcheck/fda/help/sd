sd.fd                  package:fda                  R Documentation

_S_t_a_n_d_a_r_d _D_e_v_i_a_t_i_o_n _o_f _F_u_n_c_t_i_o_n_a_l _D_a_t_a

_D_e_s_c_r_i_p_t_i_o_n:

     Evaluate the standard deviation of a set of functions in a
     functional data object.

_U_s_a_g_e:

     sd.fd(fdobj)
     std.fd(fdobj)
     stdev.fd(fdobj)
     stddev.fd(fdobj)

_A_r_g_u_m_e_n_t_s:

   fdobj: a functional data object. 

_D_e_t_a_i_l_s:

     The multiple aliases are provided for compatibility with previous
     versions and with other languages.  The name for the standard
     deviation function in R is 'sd'.  Matlab uses 'std'.  S-Plus and
     Microsoft Excal use 'stdev'.  'stddev' was used in a previous
     version of the 'fda' package and is retained for compatibility.

_V_a_l_u_e:

     a functional data object with a single replication that contains
     the standard deviation of the one or several functions in the
     object 'fdobj'.

_S_e_e _A_l_s_o:

     'mean.fd',  'sum.fd',  'center.fd'

_E_x_a_m_p_l_e_s:

     liptime  <- seq(0,1,.02)
     liprange <- c(0,1)

     #  -------------  create the fd object -----------------
     #       use 31 order 6 splines so we can look at acceleration

     nbasis <- 51
     norder <- 6
     lipbasis <- create.bspline.basis(liprange, nbasis, norder)
     lipbasis <- create.bspline.basis(liprange, nbasis, norder)

     #  ------------  apply some light smoothing to this object  -------

     Lfdobj   <- int2Lfd(4)
     lambda   <- 1e-12
     lipfdPar <- fdPar(lipbasis, Lfdobj, lambda)

     lipfd <- smooth.basis(liptime, lip, lipfdPar)$fd
     names(lipfd$fdnames) = c("Normalized time", "Replications", "mm")

     lipstdfd <- sd.fd(lipfd)
     plot(lipstdfd)

     all.equal(lipstdfd, std.fd(lipfd))
     all.equal(lipstdfd, stdev.fd(lipfd))
     all.equal(lipstdfd, stddev.fd(lipfd))

