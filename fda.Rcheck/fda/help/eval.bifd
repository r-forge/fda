eval.bifd                package:fda                R Documentation

_V_a_l_u_e_s _a _T_w_o-_a_r_g_u_m_e_n_t _F_u_n_c_t_i_o_n_a_l _D_a_t_a _O_b_j_e_c_t

_D_e_s_c_r_i_p_t_i_o_n:

     A vector of argument values for the first argument 's' of the
     functional data object to be evaluated.

_U_s_a_g_e:

     eval.bifd(sevalarg, tevalarg, bifd, sLfdobj=0, tLfdobj=0)

_A_r_g_u_m_e_n_t_s:

sevalarg: a vector of argument values for the first argument 's' of the
           functional data object to be evaluated. 

tevalarg: a vector of argument values for the second argument 't' of
          the  functional data object to be evaluated. 

    bifd: a two-argument functional data object. 

 sLfdobj: either a nonnegative integer or a linear differential
          operator object.  If present, the derivative or the value of
          applying the operator to the object as a function of the
          first argument 's' is evaluated rather than the functions
          themselves. 

 tLfdobj: either a nonnegative integer or a linear differential
          operator object.  If present, the derivative or the value of
          applying the operator to the object as a function of the
          second argument 't' is evaluated rather than the functions
          themselves. 

_V_a_l_u_e:

     an array of 2, 3, or 4 dimensions containing the function values. 
     The first dimension corresponds to the argument values in
     sevalarg, the second to argument values in tevalarg, the third if
     present to replications, and the fourth if present to functions.

_E_x_a_m_p_l_e_s:

     daybasis   <- create.fourier.basis(c(0,365), 365)
     harmLcoef  <- c(0,(2*pi/365)^2,0)
     harmLfd    <- vec2Lfd(harmLcoef, c(0,365))
     templambda <- 1.0
     tempfdPar  <- fdPar(daybasis, harmLfd, lambda=1)
     tempfd     <- smooth.basis(day.5,
               CanadianWeather$dailyAv[,,"Temperature.C"], tempfdPar)$fd
     #    define the variance-covariance bivariate fd object
     tempvarbifd <- var.fd(tempfd)
     #    evaluate the variance-covariance surface and plot
     weektime    <- seq(0,365,len=53)
     tempvarmat  <- eval.bifd(weektime,weektime,tempvarbifd)
     #    make a perspective plot of the variance function
     persp(tempvarmat)

