plot.pca.fd               package:fda               R Documentation

_P_l_o_t _F_u_n_c_t_i_o_n_a_l _P_r_i_n_c_i_p_a_l _C_o_m_p_o_n_e_n_t_s

_D_e_s_c_r_i_p_t_i_o_n:

     Display the types of variation across a sample of functions. 
     Label with the eigenvalues that indicate the relative importance
     of each mode of variation.

_U_s_a_g_e:

     plot.pca.fd(x, nx = 128, pointplot = TRUE, harm = 0,
                             expand = 0, cycle = FALSE, ...)

_A_r_g_u_m_e_n_t_s:

       x: a functional data object. 

      nx: Number of points to plot or vector (if length > 1) to use as
          'evalarg' in evaluating and plotting the functional principal
          components.  

pointplot: logical:  If TRUE, the harmonics / principal components are
          plotted as '+' and '-'.   Otherwise lines are used. 

    harm: Harmonics / principal components to plot.  If 0, plot all.

          If length(harm) > sum(par("mfrow")), the user advised,
          "Waiting to confirm page change..." and / or 'Click or hit
          ENTER for next page' for each page after the first.   

  expand: nonnegative real:  If expand == 0 then effect of +/- 2
          standard deviations of each pc are given otherwise the factor
          expand is used.   

   cycle: logical:  If cycle=TRUE and there are 2 variables then a
          cycle plot will be drawn If the number of variables is
          anything else, cycle will be ignored.  

     ...: other arguments for 'plot'.   

_D_e_t_a_i_l_s:

     Produces one plot for each principal component / harmonic to be
     plotted.

_V_a_l_u_e:

     invisible(NULL)

_S_e_e _A_l_s_o:

     'cca.fd',  'pda.fd' 'plot.pca.fd'

_E_x_a_m_p_l_e_s:

     #  carry out a PCA of temperature
     #  penalize harmonic acceleration, use varimax rotation

     daybasis65 <- create.fourier.basis(c(0, 365), nbasis=65, period=365)

     harmaccelLfd <- vec2Lfd(c(0,(2*pi/365)^2,0), c(0, 365))
     harmfdPar     <- fdPar(daybasis65, harmaccelLfd, lambda=1e5)
     daytempfd <- data2fd(CanadianWeather$dailyAv[,,"Temperature.C"],
           day.5, daybasis65, argnames=list("Day", "Station", "Deg C"))

     daytemppcaobj <- pca.fd(daytempfd, nharm=4, harmfdPar)
     #  plot harmonics, asking before each new page after the first:  
     plot.pca.fd(daytemppcaobj)

     # plot 4 on 1 page
     op <- par(mfrow=c(2,2))
     plot.pca.fd(daytemppcaobj, cex.main=0.9)
     par(op)

