df2lambda                package:fda                R Documentation

_C_o_n_v_e_r_t _D_e_g_r_e_e_s _o_f _F_r_e_e_d_o_m _t_o _a _S_m_o_o_t_h_i_n_g _P_a_r_a_m_e_t_e_r _V_a_l_u_e

_D_e_s_c_r_i_p_t_i_o_n:

     The degree of roughness of an estimated function is controlled by
     a smoothing parameter $lambda$ that directly multiplies the
     penalty. However, it can be difficult to interpret or choose this
     value, and it is often easier to determine the roughness by
     choosing a value that is equivalent of the degrees of freedom used
     by the smoothing procedure. This function converts a degrees of
     freedom value into a multipler $lambda$.

_U_s_a_g_e:

     df2lambda(argvals, basisobj, wtvec=rep(1, n), Lfdobj=0,
               df=nbasis)

_A_r_g_u_m_e_n_t_s:

 argvals: a vector containing rgument values associated with the values
          to be smoothed. 

basisobj: a basis function object. 

   wtvec: a vector of weights for the data to be smoothed. 

  Lfdobj: either a nonnegative integer or a linear differential
          operator object. 

      df: the degrees of freedom to be converted. 

_D_e_t_a_i_l_s:

     The conversion requires a one-dimensional optimization and may be
     therefore computationally intensive.

_V_a_l_u_e:

     a positive smoothing parameter value $lambda$

_S_e_e _A_l_s_o:

     'lambda2df',  'lambda2gcv'

_E_x_a_m_p_l_e_s:

     #  Smooth growth curves using a specified value of
     #  degrees of freedom.
     #  Set up the ages of height measurements for Berkeley data
     age <- c( seq(1, 2, 0.25), seq(3, 8, 1), seq(8.5, 18, 0.5))
     #  Range of observations
     rng <- c(1,18)
     #  Set up a B-spline basis of order 6 with knots at ages
     knots  <- age
     norder <- 6
     nbasis <- length(knots) + norder - 2
     hgtbasis <- create.bspline.basis(rng, nbasis, norder, knots)
     #  Find the smoothing parameter equivalent to 12
     #  degrees of freedom
     lambda <- df2lambda(age, hgtbasis, df=12)
     #  Set up a functional parameter object for estimating
     #  growth curves.  The 4th derivative is penalyzed to
     #  ensure a smooth 2nd derivative or acceleration.
     Lfdobj <- 4
     growfdPar <- fdPar(hgtbasis, Lfdobj, lambda)
     #  Smooth the data.  The data for the girls are in matrix
     #  hgtf.
     hgtffd <- smooth.basis(age, growth$hgtf, growfdPar)$fd
     #  Plot the curves
     plot(hgtffd)

