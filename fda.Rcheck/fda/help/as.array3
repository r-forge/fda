as.array3                package:fda                R Documentation

_R_e_s_h_a_p_e _a _v_e_c_t_o_r _o_r _a_r_r_a_y _t_o _h_a_v_e _3 _d_i_m_e_n_s_i_o_n_s.

_D_e_s_c_r_i_p_t_i_o_n:

     Coerce a vector or array to have 3 dimensions, preserving dimnames
     if feasible.  Throw an error if length(dim(x)) > 3.

_U_s_a_g_e:

     as.array3(x) 

_A_r_g_u_m_e_n_t_s:

       x: A vector or array.   

_D_e_t_a_i_l_s:

     1.  dimx <- dim(x);  ndim <- length(dimx) 

     2.  if(ndim==3)return(x).

     3.  if(ndim>3)stop.

     4.  x2 <- as.matrix(x)

     5.  dim(x2) <- c(dim(x2), 1)

     6.  xnames <- dimnames(x)

     7.  if(is.list(xnames))dimnames(x2) <- list(xnames[[1]],
     xnames[[2]], NULL)

_V_a_l_u_e:

     A 3-dimensional array with names matching 'x'

_A_u_t_h_o_r(_s):

     Spencer Graves

_S_e_e _A_l_s_o:

     'dim', 'dimnames' 'checkDims3'

_E_x_a_m_p_l_e_s:

     ##
     ## vector -> array 
     ##
     as.array3(c(a=1, b=2)) 

     ##
     ## matrix -> array 
     ##
     as.array3(matrix(1:6, 2))
     as.array3(matrix(1:6, 2, dimnames=list(letters[1:2], LETTERS[3:5]))) 

     ##
     ## array -> array 
     ##
     as.array3(array(1:6, 1:3)) 

     ##
     ## 4-d array 
     ##
     ## Not run: 
     as.array3(array(1:24, 1:4)) 
     Error in as.array3(array(1:24, 1:4)) : 
       length(dim(array(1:24, 1:4)) = 4 > 3
     ## End(Not run)

